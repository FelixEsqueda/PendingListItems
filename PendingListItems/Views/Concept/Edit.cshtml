@model PendingListItems.Models.ConceptModel
@using PendingListItems.Helpers;

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ConceptModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ConceptId)

        <div class="form-group">
            @Html.LabelFor(model => model.ConceptName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConceptName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConceptName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EsEgreso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EsEgreso)
                    @Html.ValidationMessageFor(model => model.EsEgreso, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Payd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Payd)
                    @Html.ValidationMessageFor(model => model.Payd, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prepayment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prepayment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prepayment, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.AmountPayable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmountPayable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AmountPayable, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.PayDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PayDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.TextBoxFor(m => m.PayDate, "{0:dd-MM-yyyy}", new { @Value = Model.PayDate.ToString("dd-MM-yyyy"), @class = "form-control", type = "date" })
                @Html.EditorFor(model => model.PayDate, new { @Value = Model.PayDate.Value.ToString("dd/MM/yyyy"), htmlAttributes = new { @class = "form-control", type = "date" }})
                @Html.EditorFor(m => m.PayDate, new { @Value = Model.PayDate.Value.Date.ToString("yyyy/MM/dd"), htmlAttributes = new { @class = "form-control datepicker", type = "date" } })
                <input type="date" data-date="dd/MM/yyyy" data-date-format="dd/MM/yyyy" value="@Model.PayDate">
                @Html.ValidationMessageFor(model => model.PayDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastModificationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastModificationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastModificationDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.SummaryId, "SummaryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Summaries", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SummaryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @*@Html.ActionLink("Save", "Index", new { SummaryId = ViewBag.SummaryId }, new { @class = "btn btn-primary", type = "submit" })*@
                @Html.ActionLink("Back to List", "Index", new { SummaryId = ViewBag.SummaryId }, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

<div>
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
